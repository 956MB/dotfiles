#!/usr/bin/env sh

# Colors:
#
# Red:    0xffff0000
# Orange: 0xffff6e00
# Yellow: 0xfffedd43
# Green:  0xff37f007
# Blue:   0xff00a9ff
# Pink:   0xfff000ff
# Purple: 0xff9e00ff
# White:  0xffffffff

# global settings
yabai -m config mouse_follows_focus off
yabai -m config focus_follows_mouse on
yabai -m config window_placement second_child
yabai -m config window_topmost off
yabai -m config window_shadow on
yabai -m config window_opacity off
yabai -m config window_opacity_duration 0.0
yabai -m config active_window_opacity 1.0
yabai -m config normal_window_opacity 0.90
yabai -m config window_border off

# Custom yabai settings, not used in this configuration
# yabai -m config window_border_randomize              on
#
# yabai -m config window_border_show_state             on
# yabai -m config window_border_tiled_only             on
# yabai -m config window_border_float_only             on
# yabai -m config window_border_placement              inset
# yabai -m config window_border_width                  2
# yabai -m config active_window_border_topmost         on
# yabai -m config active_window_border_color           0xffff6e00
# yabai -m config float_window_border_color            0xfffedd43
# yabai -m config sticky_window_border_color           0xff00a9ff
# yabai -m config zoom_window_border_color             0xffff0000
# yabai -m config active_window_border_colors_list     0xffff0000, 0xfffedd43, 0xfffedd43
# yabai -m config normal_window_border_color           0xff555555
# yabai -m config insert_feedback_color                0xffd75f5f
yabai -m config split_ratio 0.50
yabai -m config auto_balance off
yabai -m config mouse_modifier fn
yabai -m config mouse_action1 move
yabai -m config mouse_action2 resize
yabai -m config mouse_drop_action swap

# general space settings [ bsp or float (default: bsp) ]
yabai -m config layout float
yabai -m config top_padding 10
yabai -m config bottom_padding 10
yabai -m config left_padding 10
yabai -m config right_padding 10
yabai -m config window_gap 0

# floating window rules
yabai -m rule --add app="^Finder$" sticky=on layer=normal manage=off
yabai -m rule --add app="^Notes$" sticky=on layer=normal manage=off
yabai -m rule --add app="^System Preferences$" sticky=on layer=normal manage=off
yabai -m rule --add app="^Color Slurp$" sticky=on layer=normal manage=off

# nibar auto update rules
yabai -m signal --add event=space_changed \
    action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-jsx\"'"

# if using multple displays, add an additional rule for "display_changed" event
yabai -m signal --add event=display_changed \
    action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-jsx\"'"

# add these rules to auto-update the "windows" widget
yabai -m signal --add event=window_focused \
    action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-windows-jsx\"'"
yabai -m signal --add event=window_destroyed \
    action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-windows-jsx\"'"
yabai -m signal --add event=window_created \
    action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-windows-jsx\"'"
yabai -m signal --add event=space_changed \
    action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-windows-jsx\"'"

echo "yabai configuration loaded.."
